#!/bin/bash

plan() {
    if test -f ".rsyncmetadata"; then
        CHANGED_FILES=$(<.rsyncmetadata)
        if egrep -q "\.cpp\b|\.hpp\b|\.c\b|\.h\b|\.yaml\b" <<< $CHANGED_FILES; then
            # Figure out what packages to rebuild...
            grep 'src/' <<< "$CHANGED_FILES" | tr '/' ' ' | awk '{print $2}' | nl | sort -u -k2 | sort -n | cut -f2- | tr '\n' ' '
        else
            echo ""
        fi
    fi
    echo ""
}

apply() {
    packages=$@
    if [[ "$packages" == *"all"* ]]; then
        echo "FOUND ALL IN APPLY"
        packages=$(find src -maxdepth 1 -type d \
            -not -path "src/edna_debugger*" \
            -printf '%f\n' | tr '\n' ' ')
        echo $packages
    fi

    docker run --rm -it \
        -v $HOME/edna2023:/opt/workspace:rw \
        --user admin \
        --entrypoint /opt/workspace/scripts/remote-rebuild \
        ghcr.io/roboeagles4828/jetson:3 build $packages
    if [ -f "./.rsyncmetadata" ]; then rm .rsyncmetadata; fi
}

build() {
    packages=$@
    source /opt/ros/humble/setup.bash
    cd /opt/workspace
    colcon build --symlink-install --paths src/* --packages-select $@
}

help() {
    echo -e "\033[0;31m===WARNING: THIS SCRIPT SHOULD ONLY BE RUN ON THE REMOTE DEVICE===\033[0m"
    echo "For deploying to the remote device, use the \"remote\" script."
    echo "Usage:"
    echo "  plan                -- Reads packages to rebuild from .rsyncmetadata"
    echo "  apply [packages]    -- Rebuilds the docker container and packages specified"
    echo "  build [packages]    -- Rebuilds specified packages"
    echo "Usage: remote-rebuild (plan | apply | build)"
}

case $1 in
    # This does the plan on the remote destination
    "plan")
        plan
    ;;

    # This will run a plan on the remote destination and apply it with docker
    "apply")
        apply "${@:2}";
    ;;

    # This is for the container to use on builds
    "build")
        build "${@:2}";
    ;;

    *)
        echo "Unknown option: \"$1\""
        help
        ;;
esac

